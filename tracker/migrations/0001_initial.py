# Generated by Django 3.1.6 on 2021-04-30 00:08

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=255)),
                ('unit', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('city', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('zipcode', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Consumable',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=55)),
                ('quantity', models.IntegerField(default=1)),
                ('date_purchased', models.DateField(default=datetime.date(2021, 4, 30))),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=55)),
                ('phone', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'.", regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(max_length=50)),
                ('customer_origin', models.DateField(default=datetime.date(2021, 4, 30))),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.address')),
            ],
        ),
        migrations.CreateModel(
            name='Hardware',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_of_kit', models.BooleanField(blank=True, default=False)),
                ('name', models.CharField(blank=True, max_length=55)),
                ('serial_number', models.CharField(blank=True, default='NNN', max_length=128, null=True)),
                ('model', models.CharField(blank=True, default='NNN', max_length=128, null=True)),
                ('part_number', models.CharField(blank=True, max_length=128, null=True)),
                ('decommissioned', models.BooleanField(blank=True, default=False)),
                ('is_owned', models.BooleanField(blank=True, default=False)),
                ('location', models.CharField(default='default', max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Kit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=55)),
                ('location', models.CharField(default='default', max_length=254)),
                ('is_owned', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Software',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=55)),
                ('version', models.CharField(max_length=55)),
                ('serial_number', models.CharField(blank=True, default='NNN', max_length=128, null=True)),
                ('model', models.CharField(blank=True, default='NNN', max_length=128, null=True)),
                ('date_installed', models.DateField(default=datetime.date(2021, 4, 30))),
                ('is_installed', models.BooleanField(blank=True, default=False)),
                ('decommissioned', models.BooleanField(blank=True, default=False)),
                ('hardware_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.hardware')),
            ],
        ),
        migrations.CreateModel(
            name='Warranty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_hardware', models.BooleanField(blank=True, default=False)),
                ('is_software', models.BooleanField(blank=True, default=False)),
                ('date_issued', models.DateField(default=datetime.date(2021, 4, 30))),
                ('expiration_date', models.DateField(default=datetime.date(2021, 4, 30))),
                ('date_purchased', models.DateField(default=datetime.date(2021, 4, 30))),
                ('cost', models.BigIntegerField(default=0)),
                ('hardware_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.hardware')),
                ('software_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.software')),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'.", regex='^\\+?1?\\d{9,15}$')])),
                ('name', models.CharField(max_length=55)),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.address')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('ticket_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('date_created', models.DateField(default=datetime.date(2021, 4, 30))),
                ('due_date', models.DateField(default=datetime.date(2022, 4, 30))),
                ('date_completed', models.DateField(null=True)),
                ('month_interval', models.IntegerField(default=12)),
                ('is_completed', models.BooleanField(default=False)),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.address')),
                ('assigned_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='tracker.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_consumable', models.BooleanField(blank=True, default=False, null=True)),
                ('is_hardware', models.BooleanField(blank=True, default=False, null=True)),
                ('is_software', models.BooleanField(blank=True, default=False, null=True)),
                ('quantity', models.IntegerField(default=1)),
                ('cost', models.IntegerField(default=0)),
                ('date_purchased', models.DateField(default=datetime.date(2021, 4, 30))),
                ('consumable_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.consumable')),
                ('hardware_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.hardware')),
                ('software_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.software')),
                ('vendor_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.vendor')),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_consumable', models.BooleanField(blank=True, default=False, null=True)),
                ('is_hardware', models.BooleanField(blank=True, default=False, null=True)),
                ('is_software', models.BooleanField(blank=True, default=False, null=True)),
                ('is_customer', models.BooleanField(blank=True, default=False, null=True)),
                ('is_vendor', models.BooleanField(blank=True, default=False, null=True)),
                ('is_address', models.BooleanField(blank=True, default=False, null=True)),
                ('is_contact', models.BooleanField(blank=True, default=False, null=True)),
                ('is_kit', models.BooleanField(blank=True, default=False, null=True)),
                ('is_warranty', models.BooleanField(blank=True, default=False, null=True)),
                ('is_purchase', models.BooleanField(blank=True, default=False, null=True)),
                ('details', models.CharField(max_length=55)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('address_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.address')),
                ('consumable_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.consumable')),
                ('customer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.customer')),
                ('hardware_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.hardware')),
                ('kit_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.kit')),
                ('purchase_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.purchase')),
                ('software_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.software')),
                ('ticket_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.ticket')),
                ('vendor_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.vendor')),
                ('warranty_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.warranty')),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('address_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.address')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
                ('consumable_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.consumable')),
                ('customer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.customer')),
                ('hardware_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.hardware')),
                ('kit_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.kit')),
                ('purchase_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.purchase')),
                ('software_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.software')),
                ('ticket_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.ticket')),
                ('vendor_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.vendor')),
                ('warranty_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.warranty')),
            ],
        ),
        migrations.AddField(
            model_name='hardware',
            name='kit_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.kit'),
        ),
        migrations.AddField(
            model_name='hardware',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_customer', models.BooleanField(blank=True, default=False)),
                ('is_vendor', models.BooleanField(blank=True, default=False)),
                ('phone', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'.", regex='^\\+?1?\\d{9,15}$')])),
                ('first', models.CharField(max_length=20)),
                ('last', models.CharField(max_length=20)),
                ('origin', models.DateField(default=datetime.date(2021, 4, 30))),
                ('email', models.EmailField(max_length=50)),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.address')),
                ('customer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.customer')),
                ('vendor_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='tracker.vendor')),
            ],
        ),
    ]
